window.SheriffController = ($route, $xhr)->
  $xhr.defaults.headers.post['Content-Type'] = 'application/json'
  $xhr.defaults.headers.put['Content-Type'] = 'application/json'

  # assumes the presence of jQuery
  token = $("meta[name='csrf-token']").attr("content")
  $xhr.defaults.headers.post['X-CSRF-Token'] = token;
  $xhr.defaults.headers.put['X-CSRF-Token'] = token;
  $xhr.defaults.headers['delete']['X-CSRF-Token'] = token;


  $route.when('/alerts',
      {template: '<%= asset_path("alerts.html") %>', controller: AlertsController});

  $route.when('/deputies',
      {template: '<%= asset_path("deputies.html") %>', controller: DeputiesController});

  # $route.when('/groups/:group_id',
  #     {template: '<%= asset_path("groups.html") %>', controller: GroupsController});

  # $route.when('/plugins/:plugin_id',
  #     {template: '<%= asset_path("plugins.html") %>', controller: PluginsController});

  # $route.when('/reports/:report_id',
  #     {template: '<%= asset_path("reports.html") %>', controller: ReportsController});

  $route.otherwise({redirectTo: '/alerts'});
  # $route.onChange(()->
  #   $route.current.scope.params = $route.current.params;
  #   console.log($route.current.params);
  # );


SheriffController.$inject = ['$route', '$xhr'];


AlertsController = ($location, Alerts)->
  self = @
  Sheriff.alertsController = self
  Sheriff.Alerts = Alerts

  if ($location.hash)
    self.page =  parseInt($location.hash.match(/page=\d*/)?[0]?.split('=')?[1])
    self.page = 1 if isNaN(self.page)
    @alerts = Alerts.index(page: @page)

  self
AlertsController.$inject = ['$location', 'Alerts'];




DeputiesController = ($location, Deputies)->
  self = @
  Sheriff.deputiesController = self
  Sheriff.Deputies = Deputies

  if ($location.hash)
    self.page =  parseInt($location.hash.match(/page=\d*/)?[0]?.split('=')?[1])
    self.page = 1 if isNaN(self.page)
    @deputies = Deputies.index(page: @page)

  self
DeputiesController.$inject = ['$location', 'Deputies'];
