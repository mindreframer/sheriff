Sheriff.SheriffController = ($route, $xhr)->
  $xhr.defaults.headers.post['Content-Type'] = 'application/json'
  $xhr.defaults.headers.put['Content-Type'] = 'application/json'

  # assumes the presence of jQuery
  token = $("meta[name='csrf-token']").attr("content")
  $xhr.defaults.headers.post['X-CSRF-Token'] = token;
  $xhr.defaults.headers.put['X-CSRF-Token'] = token;
  $xhr.defaults.headers['delete']['X-CSRF-Token'] = token;

  <% Sheriff::EXPOSED_MODELS.map{|x| x.pluralize.downcase}.each do |m| %>
  $route.when('/<%= m %>',
      {template: '<%= asset_path("#{m}/index.html") %>', controller: Sheriff.<%= m.humanize %>Controller});
  $route.when('/<%= m %>/show/:<%= m.singularize %>_id',
      {template: '<%= asset_path("#{m}/show.html") %>', controller: Sheriff.<%= m.humanize %>Controller});
  <% end %>

  $route.otherwise({redirectTo: '/deputies'});
  # $route.onChange(()->
  #   $route.current.scope.params = $route.current.params;
  #   console.log($route.current.params);
  # );

Sheriff.SheriffController.$inject = ['$route', '$xhr'];

<% Sheriff::EXPOSED_MODELS.each do |model| %>
<% models = model.pluralize %>
Sheriff.<%= models.humanize %>Controller = ($location, <%= models.humanize %>)->
  self = @
  Sheriff.<%= models.downcase  %>Controller = self
  Sheriff.<%= models %> = <%= models %>

  if ($location.hash)
    self.page =  parseInt($location.hash.match(/page=\d*/)?[0]?.split('=')?[1])
    self.page = 1 if isNaN(self.page)
    @<%= models.downcase %> = <%= models %>.index(page: @page)



  self
Sheriff.<%= models %>Controller.$inject = ['$location', '<%= models %>'];
<% end %>

